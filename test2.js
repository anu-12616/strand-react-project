const data = {
  Order_ID: {
    display_value: "135888000004225403 - STRAN-2023-50002",
    ID: "135888000004225403",
  },
  Status: "",
  Cancer_Risk_Report: "",
  Carrier_Risk_Report: "",
  Report_JSON:
    '{ "report": { "sample_id": "STRAN-2023-50002", "version": "v1", "demographics": { "name": "Neha NLN", "phone_no": "+91-8139815836", "gender": "Female", "date_of_birth": "05-Aug-2004", "email_id": "neha.nln@test.com", "parents_sample_ids": { "father": "STRAN-2022-1100", "mother": null }, "sample_collection_date": "24-Dec-2022", "sample_received_at_lab_date": "26-Dec-2022", "report_date": null }, "findings": [ { "category": "Hereditary Cancer Risk Report", "num_observations_of_significance": 2, "detailed_findings": [ { "subcategory": [ "Breast" ], "biomarkers": { "gene_symbol": "BARD1", "zygosity": "Heterozygous", "inheritance": "Dominant", "variant_description": { "genomic_hgvs": "chr19:55324683dupA", "cdna_hgvs": "c.810dupA" }, "variant_classification": "Likely Pathogenic" } }, { "subcategory": [ "Breast" ], "biomarkers": { "gene_symbol": "ATM", "zygosity": "Heterozygous", "inheritance": "Dominant", "variant_description": { "genomic_hgvs": "chrX:138714609G>C", "cdna_hgvs": "c.56C>G", "protein_hgvs": "p.Ser19Cys" }, "variant_classification": "Variant of Uncertain Significance (VUS)" } }, { "subcategory": [ "Pancreatic" ], "biomarkers": { "gene_symbol": "ATM", "zygosity": "Heterozygous", "inheritance": "Dominant", "variant_description": { "genomic_hgvs": "chrX:138714609G>C", "cdna_hgvs": "c.56C>G", "protein_hgvs": "p.Ser19Cys" }, "variant_classification": "Variant of Uncertain Significance (VUS)" } }, { "subcategory": [ "Prostate" ], "biomarkers": { "gene_symbol": "ATM", "zygosity": "Heterozygous", "inheritance": "Dominant", "variant_description": { "genomic_hgvs": "chrX:138714609G>C", "cdna_hgvs": "c.56C>G", "protein_hgvs": "p.Ser19Cys" }, "variant_classification": "Variant of Uncertain Significance (VUS)" } } ] }, { "category": "Hereditary Cardio Report", "num_observations_of_significance": 0, "detailed_findings": [] }, { "category": "In-born Errors of Metabolism Report", "num_observations_of_significance": 1, "detailed_findings": [ { "subcategory": [ "Carbohydrate metabolism disorder", "Mucopolysaccharidoses type 1 late onset (Scheie Sydrome)" ], "biomarkers": { "gene_symbol": "IDUA", "zygosity": "Heterozygous", "inheritance": "Dominant", "variant_description": { "genomic_hgvs": "chr3:51308444T>A", "cdna_hgvs": "c.2548+6T>A" }, "variant_classification": "Variant of Uncertain Significance (VUS)" } }, { "subcategory": [ "Lysosomal Storage Disease", "Mucopolysaccharidoses type 1 late onset (Scheie Sydrome)" ], "biomarkers": { "gene_symbol": "IDUA", "zygosity": "Heterozygous", "inheritance": "Dominant", "variant_description": { "genomic_hgvs": "chr3:51308444T>A", "cdna_hgvs": "c.2548+6T>A" }, "variant_classification": "Variant of Uncertain Significance (VUS)" } } ] }, { "category": "My Carrier Risk Screening Report", "num_observations_of_significance": 1, "detailed_findings": [ { "subcategory": [ "Ataxia", "Ataxia telangiectasia" ], "biomarkers": { "gene_symbol": "ATM", "zygosity": "Heterozygous", "inheritance": "Dominant", "variant_description": { "genomic_hgvs": "chrX:138714609G>C", "cdna_hgvs": "c.56C>G", "protein_hgvs": "p.Ser19Cys" }, "variant_classification": "Variant of Uncertain Significance (VUS)" } }, { "subcategory": [ "Neurodegenerative disorders", "Ataxia telangiectasia" ], "biomarkers": { "gene_symbol": "ATM", "zygosity": "Heterozygous", "inheritance": "Dominant", "variant_description": { "genomic_hgvs": "chrX:138714609G>C", "cdna_hgvs": "c.56C>G", "protein_hgvs": "p.Ser19Cys" }, "variant_classification": "Variant of Uncertain Significance (VUS)" } } ] }, { "category": "Pharmacogenomics (PGx) Report", "summary": [ { "therapeutic_area": "Neurology", "standard_precuation": [ "Phenytoin", "Siponimod", "Amphetamine", "Cevimeline", "Deutetrabenazine", "Dextromethorphan/Quinidine", "Donepezil" ], "use_with_caution": [ "Pitolisant Meclizine", "Brivaracetam", "Clobazam" ], "consider_alternative": [] }, { "therapeutic_area": "Cardiology", "standard_precuation": [ "Carvedilol", "Flecainide", "Metoprolol", "Nebivolol" ], "use_with_caution": [ "Propafenone", "Propranolol", "Atorvastatin", "Pravastatin" ], "consider_alternative": [ "Simvastatin", "Rosuvastatin" ] } ], "detailed_findings": [ { "therapeutic_area": "Neurology", "gene": "CYP2D6", "drug": "Dextromethorphan/ Quinidine", "drug_information": "Dextromethorphan and quinidine in combination is used to treat involuntary outbursts of crying or laughing in people with certain neurological disorders, including multiple sclerosis and amyotrophic lateral sclerosis (ALS, or Lou Gehrig\'s disease). While the precise mode of action of the combination is currently not fully described, dextrometorphan singly is potent blocker of a major neurotransmitter/ion channel critical for neuronal response and quinidine is prevents rapid metabolism of dextrometorphan hence increasing its duration of action.", "genotype": "(*1/*1)xN", "phenotype": "Ultrarapid metabolizer", "clinical_interpretation": "No recommended guidelines available for this genotype", "recommendation": "No recommended guidelines available for this genotype", "key_action": "Standard Precaution", "evidence_level": 3 }, { "therapeutic_area": "Cardiology", "gene": "SLCO1B1", "drug": "Propafenone", "drug_information": "Propefenone is used to prevent serious heart rhythm disorders associated with certain conditions. It belongs to a class of medication called  anti-arrhythmics which act on the heart regions that provide contractile force and rhythm called the His-Purkenjie system. Side effects may include difficulty breathing, vision problems, tiredness.", "genotype": "*1/*17", "phenotype": "poor metabolizer", "clinical_interpretation": "No recommended guidelines available for this genotype", "recommendation": "No recommended guidelines available for this genotype", "key_action": "Use with caution", "evidence_level": 1 } ] } ] } }',
  Cardio_Report: "",
  ID: "135888000004225411",
  IEM_Report: "",
  PGx_Report: "",
};

const allReports = JSON.parse(data.Report_JSON);
console.log(allReports);
console.log(allReports.report.findings);
allReports.report.findings.map((finding) => {
  console.log(finding.detailed_findings);
});
